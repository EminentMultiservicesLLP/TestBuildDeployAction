@using CGHSBilling.Models
@using Microsoft.Ajax.Utilities
@model List<MenuUserRightsModel>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Jambo Medical Services</title>
    @Styles.Render("~/Content/cssMust")
    @Styles.Render("~/Content/css")
    @functions{

        public HtmlString GenerateSubMenus(string parentMenuPageName, int menuId, string menus)
        {
            if (Model != null && Model.Any(w => w.ParentMenuId == menuId))
            {
                menus = string.Concat(menus, "<ul class=", (menuId == 0 ? "menu>" : "sub-menu>"));
                foreach (var subMenu in Model.Where(w => w.ParentMenuId == menuId))
                {
                    menus = menus + "<li>";

                    if (menuId == 0)
                    {
                        var childMenu = string.Empty;
                        if (Model.Any(w => w.ParentMenuId == subMenu.MenuId) == false) childMenu = "/Home/Home/" + subMenu.PageName; //+ "?MenuId=" + @mainMenu.MenuId;
                        menus = string.Concat(menus, "<a data-ajax='true' data-ajax-mode='replace' data-ajax-update='#ShowView' href=", childMenu.IsNullOrWhiteSpace() ? "#" : childMenu, ">");
                        menus = string.Concat(menus, "<i class='fa ", subMenu.Icon, "'></i><div>", subMenu.MenuName, "<span>", subMenu.PageShortDescription, "</span></div></a>");
                    }
                    else
                    {
                        var childMenu = string.Concat("/", parentMenuPageName, "/", parentMenuPageName, "/", subMenu.PageName);
                        menus = string.Concat(menus, "<a data-ajax='true' data-ajax-begin='showPageLoadingSpinner' data-ajax-complete='hidePageLoadingSpinner' data-ajax-loading='#ajaxLoaderDiv' data-ajax-mode='replace' data-ajax-update='#ShowView' href=", childMenu, ">", subMenu.MenuName, "</a>");
                    }
                    if (Model.Any(w => w.ParentMenuId == subMenu.MenuId)) menus = GenerateSubMenus(subMenu.PageName, subMenu.MenuId, menus).ToString();

                    menus = menus + "</li>";
                }
                menus = menus + "</ul>";
            }
            return new HtmlString(menus);
        }

    }
</head>
<body>
    <div id="topSection" class="row" style="margin: 0; z-index: 0">
        @if (Request.IsAuthenticated)
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true);
            <header>
                <div class="col-sm-9">
                    <nav>
                        <a id="resp-menu" class="responsive-menu" href="#"><i class="fa fa-reorder"></i> Menu</a>
                        <ul class="menu">
                            @*<li>
                                    <a class="home" href="#">
                                        <i class="fa fa-home"></i>
                                        <div>Home<span>Come to Home</span></div>
                                    </a>
                                </li>*@
                            @if (Model != null)
                            {
                                foreach (var mainMenu in Model.Where(w => w.ParentMenuId == 0))
                                {
                                    var mainMenulink = "#";
                                    if (Model.Any(w => w.ParentMenuId == @mainMenu.MenuId) == false)
                                    {
                                        // Menu items without submenus
                                        mainMenulink = "/CommonArea/CommonArea/" + @mainMenu.PageName;
                                        <li>
                                            <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#ShowView" href="@mainMenulink">
                                                <i class="fa @mainMenu.Icon"></i>
                                                <div>
                                                    @mainMenu.MenuName
                                                    <span>@mainMenu.PageShortDescription</span>
                                                </div>
                                            </a>
                                        </li>
                                    }
                                    else
                                    {
                                        // Menu items with submenus
                                        <li>
                                            <a href="@mainMenulink">
                                                <i class="fa @mainMenu.Icon"></i>
                                                <div>
                                                    @mainMenu.MenuName
                                                    <span>@mainMenu.PageShortDescription</span>
                                                </div>
                                            </a>
                                            @GenerateSubMenus(@mainMenu.PageName, @mainMenu.MenuId, "")
                                        </li>
                                    }
                                }

                            }
                        </ul>
                        @{
                            var MarqueeText = Model != null ? Model.Select(w => w.MarqueeMessage).FirstOrDefault().ToString() : "";
                        }
                        @{if (MarqueeText != null && MarqueeText.ToString().Trim() != "")
                            {
                                <div class="marquee">
                                    <p>@MarqueeText.ToString()</p>
                                </div>
                            }
                        }
                    </nav>
                </div>
                <div class="col-sm-3" style="z-index: 10; background-color: inherit; padding: 0;">
                    <div class="col-sm-3" style="text-align: end; padding: 0;">
                        <a href="@Url.Action("Index", "Home")">
                            <div>
                                <img src="@Url.Content("~/Images/LogoJMS1.png")" style="width: 40px;" />
                            </div>
                        </a>
                    </div>
                    <div class="col-sm-9" style="text-align: center; padding: 0;">
                        <nav>
                            <ul class="menu">
                                @if (!string.IsNullOrEmpty(Convert.ToString(Session["ClientExpiryDate"])))
                                {
                                    <li>
                                        <a>
                                            <div>
                                                @Session["ClientExpiryDate"]
                                                <span>Expiry Date</span>
                                            </div>
                                        </a>
                                    </li>
                                }
                                <li class="dropdown">
                                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                        <div>
                                            @Html.Encode(User.Identity.Name)
                                            <span>Signout here</span>
                                        </div>
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li>
                                            @Html.ActionLink("Sign Out", "LogOff", "Account", new { area = "" }, new { @class = "glyphicon glyphicon-log-out" })
                                        </li>
                                        <li>
                                            @if (Convert.ToBoolean(Session["IsAdmin"]) == true)
                                            {
                                                <a onclick="ClearCache(); return false;" class="glyphicon glyphicon-trash"> ClearCache</a>
                                            }
                                        </li>
                                        <li>
                                            <a data-ajax='true' data-ajax-mode='replace' data-ajax-update='#ShowView' href="/CommonArea/CommonArea/ResetPassWord" class="glyphicon glyphicon-trash"> ResetPassword</a>
                                        </li>
                                    </ul>
                                </li>
                            </ul>

                            <div class="col-sm-2">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="true">
                                    <span class="label label-success" title="Balance Amt/Remaining Bills">@Session["BalanceAmount"]</span>
                                </a>

                            </div>
                            <div class="col-sm-10">
                            </div>
                        </nav>
                    </div>
                </div>
            </header>
        }
        else
        {
            @Html.ActionLink("Sign In", "Login", "Account")
        }
    </div>
    <div id="ajaxLoaderDiv" style="position: fixed; top: 40%; left: 45%; z-index: 1234; display: none;" class="blur">
        <img src="@Url.Content("~/Images/loading.gif")" alt="Loading, please wait..." class="ajax-loader" />
    </div>
    <div id="bodySection">
        <section class="content-wrapper row">
            <div class="partialViewSection">
                <div id="clbtn" style="float:right; clear:right;"><img src="~/Images/cross-button.png" alt="Close" /></div>
                <div id="ShowView" style="padding-bottom: 3px;background-color:#FFEDDA">
                    @RenderBody()
                </div>
            </div>
        </section>
    </div>
</body>

</html>
<footer style="position:center;width: 100%;background-color:transparent;
position:absolute; bottom: 0px; text-align: center;">
    <b><p style="color:black;font-size:15px;margin:0;">Developed By Jambo Medical Services</p></b>
</footer>
<script src="~/Scripts/jLinq-2.2.1.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@Styles.Render("~/Content/external")
@Styles.Render("~/Content/themes/base/css")
@Scripts.Render("~/bundles/jquery")

@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/jqueryMore")
@Scripts.Render("~/bundles/jquery/external")
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {
        var touch = $('#resp-menu');
        var menu = $('.menu');

        $(touch).on('click', function (e) {
            e.preventDefault();
            menu.slideToggle();
        });

        $(window).resize(function () {
            var w = $(window).width();
            if (w > 767 && menu.is(':hidden')) {
                menu.removeAttr('style');
            }
        });

        $("#clbtn").click(function () {
            $("#ShowView").empty().load('@Url.Action("PackageSummaryView", "Home")');
        });

    });

    function fillDiv(show) {
        var topSection = $("#topSection");
        var topHeight = topSection.height();

        var div = $(".partialViewSection");


        var availableHeight = window.innerHeight;
        var scaleY = availableHeight - (topHeight + 25);

        if (show === false) {
            scaleY = 0;
        }
        div.css({
            "position": "relative",
            "height": scaleY + "px"
        });
    }

    function showPageLoadingSpinner() {
        $('#ajaxLoaderDiv').show();
    }

    function hidePageLoadingSpinner() {
        fillDiv();
        setTimeout(function () {
            $('#ajaxLoaderDiv').hide();
        }, 20000);

    }



    function ClearCache() {
        try {
            var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
            $.ajax({
                type: "GET",
                traditional: true,
                headers: {
                    "__RequestVerificationToken": antiForgeryToken
                },
                url: "/Account/ClearAllCache",
                data: {},
                success: function () {
                    ShowAlert("success", "All Cached data cleared successfully");
                },
                error: function (a, b, response) {
                    ShowAlert("error", "Failed to get Clear Cache, Please contact IT team. Error " + response);
                }
            });
        } catch (err) {
        }
    }


</script>

@*---------------------------------------------------The following code handles displaying the expiry warning alert-----------------------------------------------------*@

@{
    DateTime? expiryDate = null;
    int? remainingDays = null;
    bool isExpired = false, isExpiringToday = false;

    string sessionExpiry = Convert.ToString(Session["ClientExpiryDate"]);

    if (!string.IsNullOrEmpty(sessionExpiry))
    {
        DateTime parsedDate; // Declare separately
        if (DateTime.TryParse(sessionExpiry, out parsedDate))
        {
            expiryDate = parsedDate;
            remainingDays = (expiryDate.Value.Date - DateTime.Now.Date).Days;
            isExpired = remainingDays < 0;
            isExpiringToday = remainingDays == 0;
        }
    }
}


<style>
    /* Expiry warning modal */
    #ExpiryWarning {
        display: none;
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: rgba(0, 0, 0, 0.9);
        color: white;
        padding: 20px 30px;
        border-radius: 10px;
        z-index: 1001;
        font-size: 18px;
        text-align: center;
    }

        #ExpiryWarning p {
            font-weight: bold;
        }

            #ExpiryWarning p span {
                color: #ffd700;
            }

    #OKbtn {
        margin-top: 10px;
        font-size: 16px;
    }

    /* Background overlay */
    #overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(5px);
        z-index: 1000;
    }
</style>

@if (remainingDays.HasValue && (remainingDays <= 15)) // Show only if expiry is within 15 days
{
    <div id="ExpiryWarning">
        @if (isExpired)
        {
            <p><span>⚠️</span> Your subscription expired <span id="expiryCountdown">@Math.Abs(remainingDays.Value)</span> days ago, please renew it by contacting <span>9892705571</span>.</p>
        }
        else if (isExpiringToday)
        {
            <p><span>⚠️</span> Your subscription expires <span id="expiryCountdown">today</span>, please renew it by contacting <span>9892705571</span>.</p>
        }
        else if (remainingDays <= 15)
        {
            <p><span>⚠️</span> Your subscription will expire in <span id="expiryCountdown">@remainingDays.Value</span> days, please renew it by contacting <span>9892705571</span>.</p>
        }
        <button id="OKbtn" class="btn btn-success">OK</button>
    </div>
    <div id="overlay"></div>
}


<script type="text/javascript">
    $(document).ready(() => {
    let remainingDays = @Html.Raw(remainingDays.HasValue ? remainingDays.Value.ToString() : "null");

    if (remainingDays !== null && remainingDays !== "null" && parseInt(remainingDays) <= 15) {
        $("#ExpiryWarning, #overlay").fadeIn();
    }

    $("#OKbtn").on("click", () => {
        $("#ExpiryWarning, #overlay").fadeOut();
    });
});
</script>
