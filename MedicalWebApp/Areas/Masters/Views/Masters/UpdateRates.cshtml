
@using (Html.BeginForm())
{
    <fieldset>
        <div class="panel-group" id="EntryForm">
            <div class="panel panel-default">
                <div class="panel-body entryAreabackgroundCSSforinsideElement">
                    <div class="row">
                        <div class="col-sm-3" @*style="display:none"*@>
                            @Html.Label("Select State")
                            @Html.DropDownList("ddlState", new SelectList(string.Empty, "Value", "Text"), "Select State ", new { @class = "wrapperdropdown-content form-control" })
                        </div>

                        <div class="col-sm-3">
                            @Html.Label("Select City")
                            @Html.DropDownList("ddlCity", new SelectList(string.Empty, "Value", "Text"), "Select City", new { @class = "wrapperdropdown-content form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-3">
                            <br />
                            <button type="button" class="btn btn-success" id="btnShow">Show</button>
                            @*<button type="button" class="btn btn-success" id="btnClear">Reset</button>*@
                            <button type="button" class="btn btn-success" id="btnSave">Save</button>
                        </div>


                    </div>
                    <br />
                    <div class="row">
                        <div class="col-sm-12">
                            <div id="UpdateRateGrid"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </fieldset>
}
<script type="text/javascript">

    $.ajax({
        type: "GET",
        traditional: true,
        url: "/CommonMaster/GetAllStateMaster",
        success: function (response) {
            $.each(response,
                function (index, value) {
                    $('#ddlState').append('<option value="' + value.Id + '">' + value.Name + '</option>');
                });
        }
    });
    $('#ddlState').on('change', function () {
        $.ajax({
            type: "GET",
            traditional: true,
            data: { stateId: $("#ddlState").val() },
            url: "/CommonMaster/GetAllCityByState",
            success: function (response) {
                $('#ddlCity').val("");
                $('#ddlCity').html("");
                $.each(response,
                    function (index, value) {
                        $('#ddlCity').append('<option value="' + value.Id + '">' + value.Name + '</option>');
                    });
            },
            error: function (a, b, c) {

            }
        });
    });

    var dataRateGrid = { location: "local" };
    var colRateGrid = [
        {
            dataIndx: "State", Width: 15, align: "center", type: 'checkBoxSelection', cls: 'ui-state-default', sortable: false,
            editor: false, dataType: 'bool',
            title: "<input type='checkbox' />",
            cb: { select: true, all: true, header: true }
        },
        { title: "", dataIndx: "ServiceId", dataType: "integer", hidden: true },
        { title: "", dataIndx: "TariffDtlId", dataType: "integer", hidden: true },
        { title: "", dataIndx: "TariffMasterId", dataType: "integer", hidden: true },
        { title: "Cghs Code", dataIndx: "CghsCode", width: 100, filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }, editable: false },
        { title: "Service Type", dataIndx: "ServiceType", width: 100, filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }, editable: false },
        { title: "Service Name", dataIndx: "ServiceName", width: 100, filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }, editable: false },
        { title: "Room Type", dataIndx: "RoomType", width: 100, filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }, editable: false },
        { title: "Patient Type", dataIndx: "PatientType", width: 100, filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }, editable: false },
        { title: "NABH", dataIndx: "NABHRate", dataType: "float", filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] } },
        { title: "Non NABH", dataIndx: "NonNABHRate", dataType: "float", filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] } }
    ];
    var setUpdateRateGrid = {
        width: '100%',
        height: 450,
        sortable: false,
        numberCell: { show: true },
        hoverMode: 'cell',
        showTop: false,
        title: 'Rates Data',
        resizable: true,
        scrollModel: { autoFit: true },
        draggable: true,
        wrap: false,
        filterModel: { off: true, mode: "AND", header: true },
        editable: true,
        selectionModel: { type: 'cell' },
        colModel: colRateGrid,
        dataModel: dataRateGrid,
        pageModel: { type: "local", rPP: 20 }
    }
    var $UpdateRateGrid = $("#UpdateRateGrid").pqGrid(setUpdateRateGrid);


    $("#btnShow").click(function (e) {
        if (!showAlertOnBlank($("#ddlState"), "State is missing! Please select State")) return;
        if (!showAlertOnBlank($("#ddlCity"), "City is missing! Please select City")) return;
        LoadUpdateGrid();
    });

    $("#btnSave").click(function (e) {
        var grid = $UpdateRateGrid.pqGrid('getInstance').grid;
        var data = grid.option("dataModel.data") || [];
        data = data.filter(gridData => gridData.State === true);
        if (data.length === 0) {
            ShowAlert("error", 'Kindly select data to save');
            return;
        }
        var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
        var jsondata = JSON.stringify({
            UpdateRates: data,
        });
        $.ajax({
            type: "POST",
            traditional: true,
            contentType: 'application/json; charset=utf-8',
            async: true,
            url: "/UpdateRates/UpdateRates",
            data: jsondata,
            beforeSend: function () {
                ClearParamGrid('UpdateRateGrid');
                $UpdateRateGrid.pqGrid("showLoading");
            },
            complete: function () {
                $UpdateRateGrid.pqGrid("hideLoading");
            },
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            success: function (response) {
                ShowAlert("success", "Record Updated Successfully");
                LoadUpdateGrid();
            },
            error: function (a, b, response) {
                $UpdateRateGrid.pqGrid("hideLoading");
                ShowAlert("error", "Failed to Update Rate, Please contact IT team. Error " + response);
            },
            complete: function () {
                $UpdateRateGrid.pqGrid("hideLoading");
            }
        })
    });

    function LoadUpdateGrid() {
        var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
        let StateId = $("#ddlState").val();
        let CityId = $("#ddlCity").val();
        $.ajax({
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            traditional: true,
            data: { StateId: StateId, CityId: CityId },
            url: "/UpdateRates/GetRates",
            beforeSend: function () {
                $UpdateRateGrid.pqGrid("showLoading")
            },
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            success: function (response) {
                if (response.success) {
                    $UpdateRateGrid.pqGrid("hideLoading");
                    $UpdateRateGrid.pqGrid("option", "dataModel.data", response.data);
                    $UpdateRateGrid.pqGrid("refreshDataAndView");
                }
            },
            error: function (a, exception, b) {
                $UpdateRateGrid.pqGrid("hideLoading");
            }
        });
    }
</script>